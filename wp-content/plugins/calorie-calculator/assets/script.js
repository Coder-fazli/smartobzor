jQuery(document).ready(function($) {

    // Activity level descriptions
    const activityDescriptions = {
        1: '–•–æ–∂—É –≤ –º–∞–≥–∞–∑–∏–Ω –∏–ª–∏ –Ω–µ–¥–æ–ª–≥–æ –ø—Ä–æ–≥—É–ª–∏–≤–∞—é—Å—å',
        2: '–õ–µ–≥–∫–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è 1-3 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é',
        3: '–£–º–µ—Ä–µ–Ω–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è 3-5 —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é',
        4: '–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ 6-7 —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é',
        5: '–û—á–µ–Ω—å –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏, —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞'
    };

    // Activity level labels
    const activityLabels = [
        '–ù–∏–∑–∫–∞—è',
        '–õ–µ–≥–∫–∞—è',
        '–£–º–µ—Ä–µ–Ω–Ω–∞—è',
        '–í—ã—Å–æ–∫–∞—è',
        '–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è'
    ];

    // Initialize UI interactions
    initializeGenderSelection();
    initializeGoalSelection();
    initializeFormulaSelection();
    initializeActivitySlider();
    initializeFormSubmission();

    function initializeGenderSelection() {
        $('.gender-option').click(function() {
            $('.gender-option').removeClass('selected');
            $(this).addClass('selected');
            $(this).find('input[type="radio"]').prop('checked', true);
        });
    }

    function initializeGoalSelection() {
        $('.goal-option').click(function() {
            $('.goal-option').removeClass('selected');
            $(this).addClass('selected');
            $(this).find('input[type="radio"]').prop('checked', true);
        });
    }

    function initializeFormulaSelection() {
        $('.formula-option').click(function() {
            $('.formula-option').removeClass('selected');
            $(this).addClass('selected');
            $(this).find('input[type="radio"]').prop('checked', true);
        });
    }

    function initializeActivitySlider() {
        const slider = $('input[name="activity"]');
        const labels = $('.activity-label');
        const description = $('.activity-description');

        function updateSlider() {
            const value = parseInt(slider.val());
            const percentage = ((value - 1) / 4) * 100;

            // Update visual progress
            slider.css({
                'background': `linear-gradient(to right, #ff6b35 0%, #ff6b35 ${percentage}%, #e0e0e0 ${percentage}%, #e0e0e0 100%)`,
                'transition': 'background 0.3s ease'
            });

            // Update current activity level
            $('.activity-current').text(activityLabels[value - 1]);

            // Update description
            $('.activity-description').text(activityDescriptions[value]);
        }

        // Handle different events for smooth interaction
        slider.on('input', function() {
            updateSlider();
        });

        slider.on('change', function() {
            updateSlider();
        });

        updateSlider(); // Initialize
    }

    function initializeFormSubmission() {
        $('#calorie-calc-form').on('submit', function(e) {
            e.preventDefault();

            const button = $('.calc-button');
            const results = $('#calc-results');

            // Add loading state
            button.addClass('loading');
            button.find('.calc-icon').text('‚è≥');
            button.find('span:last-child').text('–†–ê–°–°–ß–ò–¢–´–í–ê–ï–ú –í–ê–®–£ –ù–û–†–ú–£...');

            // Collect form data
            const formData = {
                action: 'calculate_calories',
                nonce: calorie_calc_ajax.nonce,
                gender: $('input[name="gender"]:checked').val(),
                age: parseInt($('input[name="age"]').val()),
                height: parseInt($('input[name="height"]').val()),
                weight: parseInt($('input[name="weight"]').val()),
                activity: parseInt($('input[name="activity"]').val()),
                goal: $('input[name="goal"]:checked').val(),
                formula: $('input[name="formula"]:checked').val()
            };

            // Validate form data
            if (!validateFormData(formData)) {
                resetButton();
                return;
            }

            // Make AJAX request
            $.ajax({
                url: calorie_calc_ajax.ajax_url,
                type: 'POST',
                data: formData,
                success: function(response) {
                    if (response.success) {
                        displayResults(response, formData);
                        results.slideDown();
                    } else {
                        alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
                    }
                    resetButton();
                },
                error: function() {
                    alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.');
                    resetButton();
                }
            });
        });
    }

    function validateFormData(data) {
        if (!data.gender) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª');
            return false;
        }

        if (!data.age || data.age < 1) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç');
            return false;
        }

        if (!data.height || data.height < 1) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–æ—Å—Ç');
            return false;
        }

        if (!data.weight || data.weight < 1) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–µ—Å');
            return false;
        }

        return true;
    }

    function resetButton() {
        const button = $('.calc-button');
        button.removeClass('loading');
        button.find('.calc-icon').text('üßÆ');
        button.find('span:last-child').text('–†–ê–°–°–ß–ò–¢–ê–¢–¨ –ú–û–Æ –ù–û–†–ú–£');
    }

    function displayResults(response, formData) {
        const goalTexts = {
            'lose': '–ø–æ—Ö—É–¥–µ–Ω–∏—è',
            'maintain': '–ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –≤–µ—Å–∞',
            'gain': '–Ω–∞–±–æ—Ä–∞ –≤–µ—Å–∞'
        };

        // Calculate BMI position for the progress bar (0-100%)
        const bmiPosition = Math.min(Math.max((response.bmi - 15) / 25 * 100, 0), 100);

        const resultsHtml = `
            <div class="results-title">–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç</div>

            <!-- BMI Section -->
            <div class="result-card bmi-card">
                <div class="card-header">
                    <h3>–í–∞—à –∏–Ω–¥–µ–∫—Å –º–∞—Å—Å—ã —Ç–µ–ª–∞</h3>
                    <span class="info-icon" title="–ò–ú–¢ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∫–∞–∫ –≤–µ—Å –≤ –∫–≥ –¥–µ–ª—ë–Ω–Ω—ã–π –Ω–∞ –∫–≤–∞–¥—Ä–∞—Ç —Ä–æ—Å—Ç–∞ –≤ –º–µ—Ç—Ä–∞—Ö">‚ìò</span>
                </div>
                <div class="bmi-display">
                    <div class="bmi-value">${response.bmi}</div>
                    <div class="bmi-indicator">
                        <div class="bmi-bar">
                            <div class="bmi-gradient"></div>
                            <div class="bmi-pointer" style="left: ${bmiPosition}%"></div>
                        </div>
                        <div class="bmi-labels">
                            <span>–î–µ—Ñ–∏—Ü–∏—Ç</span>
                            <span>–ù–æ—Ä–º–∞</span>
                            <span>–ò–∑–±—ã—Ç–æ–∫</span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Daily Calories Section -->
            <div class="result-card calories-card">
                <div class="card-header">
                    <h3>–í–∞—à–∞ —Å—É—Ç–æ—á–Ω–∞—è –Ω–æ—Ä–º–∞ –∫–∞–ª–æ—Ä–∏–π</h3>
                    <span class="info-icon" title="–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–ª–æ—Ä–∏–π –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤–∞—à–µ–π —Ü–µ–ª–∏">‚ìò</span>
                </div>
                <div class="calories-display">
                    <div class="circular-progress" data-calories="${response.calories}">
                        <svg class="progress-ring" width="120" height="120">
                            <defs>
                                <linearGradient id="progressGradient" x1="0%" y1="0%" x2="100%" y2="0%">
                                    <stop offset="0%" style="stop-color:#667eea"/>
                                    <stop offset="100%" style="stop-color:#764ba2"/>
                                </linearGradient>
                            </defs>
                            <circle class="progress-ring-background" cx="60" cy="60" r="54"></circle>
                            <circle class="progress-ring-progress" cx="60" cy="60" r="54" stroke="url(#progressGradient)"></circle>
                        </svg>
                        <div class="progress-text">
                            <div class="calories-number">${response.calories}</div>
                            <div class="calories-label">–∫–∫–∞–ª*</div>
                        </div>
                    </div>
                    <div class="calories-breakdown">
                        <div class="breakdown-title">–ò–∑ –∫–æ—Ç–æ—Ä—ã—Ö</div>
                        <div class="macro-items">
                            <div class="macro-item">
                                <div class="macro-dot protein-dot"></div>
                                <span class="macro-value">${response.protein} –≥</span>
                                <span class="macro-label">–ë–µ–ª–∫–∏</span>
                            </div>
                            <div class="macro-item">
                                <div class="macro-dot fat-dot"></div>
                                <span class="macro-value">${response.fat} –≥</span>
                                <span class="macro-label">–ñ–∏—Ä—ã</span>
                            </div>
                            <div class="macro-item">
                                <div class="macro-dot carb-dot"></div>
                                <span class="macro-value">${response.carbs} –≥</span>
                                <span class="macro-label">–£–≥–ª–µ–≤–æ–¥—ã</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="result-note">
                * –î–∞–Ω–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —è–≤–ª—è—é—Ç—Å—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–µ–π, –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É.
            </div>
        `;

        $('#calc-results .results-content').html(resultsHtml);

        // Animate circular progress
        setTimeout(() => {
            animateCircularProgress();
        }, 300);
    }

    function animateCircularProgress() {
        const circle = $('.progress-ring-progress');
        const radius = 54;
        const circumference = 2 * Math.PI * radius;

        circle.css({
            'stroke-dasharray': circumference,
            'stroke-dashoffset': circumference
        });

        // Animate to 75% fill (visual effect)
        setTimeout(() => {
            circle.css({
                'stroke-dashoffset': circumference * 0.25,
                'transition': 'stroke-dashoffset 1s ease-in-out'
            });
        }, 100);
    }

    // Remove all input restrictions - let users type freely
    // Only basic validation will happen during form submission

    // Smooth scrolling to results
    function scrollToResults() {
        $('html, body').animate({
            scrollTop: $('#calc-results').offset().top - 20
        }, 800);
    }

    // Add scroll to results when displayed
    const originalSlideDown = $.fn.slideDown;
    $('#calc-results').slideDown = function() {
        const result = originalSlideDown.apply(this, arguments);
        setTimeout(scrollToResults, 300);
        return result;
    };

    // Tooltip functionality for info icon
    $('.info-icon').on('mouseenter', function() {
        const tooltip = $(`
            <div class="formula-tooltip">
                <strong>–•–∞—Ä—Ä–∏—Å-–ë–µ–Ω–µ–¥–∏–∫—Ç–∞:</strong> –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —Ñ–æ—Ä–º—É–ª–∞, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –≤ 1919 –≥–æ–¥—É<br>
                <strong>–ú–∏—Ñ—Ñ–ª–∏–Ω–∞-–°–∞–Ω –ñ–µ–æ—Ä–∞:</strong> –ë–æ–ª–µ–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Ñ–æ—Ä–º—É–ª–∞, —Å—á–∏—Ç–∞–µ—Ç—Å—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–π
            </div>
        `);

        $('body').append(tooltip);

        const icon = $(this);
        const iconOffset = icon.offset();

        tooltip.css({
            position: 'absolute',
            top: iconOffset.top - tooltip.outerHeight() - 10,
            left: iconOffset.left - tooltip.outerWidth() / 2 + icon.outerWidth() / 2,
            background: '#333',
            color: 'white',
            padding: '10px',
            borderRadius: '6px',
            fontSize: '12px',
            lineHeight: '1.4',
            zIndex: 1000,
            boxShadow: '0 2px 10px rgba(0,0,0,0.2)',
            maxWidth: '250px'
        });
    }).on('mouseleave', function() {
        $('.formula-tooltip').remove();
    });

    // Keyboard navigation
    $(document).on('keydown', function(e) {
        if (e.key === 'Enter' && !$(e.target).is('button')) {
            e.preventDefault();
            $('#calorie-calc-form').submit();
        }
    });

    // Form reset functionality (if needed)
    function resetForm() {
        $('#calorie-calc-form')[0].reset();
        $('.gender-option, .goal-option, .formula-option').removeClass('selected');
        $('.gender-option:first, .goal-option:first, .formula-option:first').addClass('selected');
        $('#calc-results').slideUp();
        initializeActivitySlider();
    }

    // Expose reset function globally if needed
    window.resetCalorieCalculator = resetForm;
});